# === DATA PROCESSING ===
data processing:
  libraries:
    - pandas
    - numpy
    - dask
    - polars
    - pyjanitor
  tasks:
    - name: Clean a DataFrame by replacing missing values and removing duplicates
      code_forms:
        - utility function
        - cleaning pipeline class
        - function with callbacks
    
    - name: Aggregate data by group and calculate statistics
      code_forms:
        - utility function
        - aggregation generator
        - function with callbacks
    
    - name: Merge multiple DataFrames on common keys
      code_forms:
        - utility function
        - cleaning pipeline class
        - function with callbacks
    
    - name: Pivot a data table for analysis
      code_forms:
        - utility function
        - function with callbacks
    
    - name: Convert and normalize heterogeneous data types
      code_forms:
        - utility function
        - cleaning pipeline class
        - validation decorator
    
    - name: Detect and handle seasonality in time series data
      code_forms:
        - utility function
        - cleaning pipeline class
        - function with callbacks
    
    - name: Convert between JSON and CSV formats with custom mappings
      code_forms:
        - utility function
        - cleaning pipeline class
        - validation decorator
    
    - name: Sample data while maintaining statistical properties
      code_forms:
        - utility function
        - function with callbacks
        - aggregation generator
    
    - name: Infer column types for unknown datasets
      code_forms:
        - utility function
        - validation decorator
        - cleaning pipeline class

# === TEXT PROCESSING ===
text processing:
  libraries:
    - nltk
    - spacy
    - transformers
    - gensim
    - regex
    - textblob
  tasks:
    - name: Extract named entities from text
      code_forms:
        - batch processing function
        - NLP pipeline class
        - lexical analysis class
    
    - name: Calculate similarity between two documents
      code_forms:
        - vector transformation function
        - NLP pipeline class
        - batch processing function
    
    - name: Classify texts according to sentiment
      code_forms:
        - NLP pipeline class
        - batch processing function
        - preprocessing decorator
    
    - name: Generate automatic text summary
      code_forms:
        - NLP pipeline class
        - vector transformation function
        - preprocessing decorator
    
    - name: Normalize and lemmatize a text corpus
      code_forms:
        - preprocessing decorator
        - batch processing function
        - NLP pipeline class
    
    - name: Process technical or domain-specific text with custom tokenization
      code_forms:
        - lexical analysis class
        - NLP pipeline class
        - preprocessing decorator
    
    - name: Extract dates and time expressions from natural language
      code_forms:
        - lexical analysis class
        - batch processing function
        - NLP pipeline class
    
    - name: Compare and highlight differences between two text documents
      code_forms:
        - vector transformation function
        - batch processing function
        - lexical analysis class
    
    - name: Generate and analyze n-grams from text input
      code_forms:
        - batch processing function
        - lexical analysis class
        - vector transformation function

# === WEB DEVELOPMENT ===
web development:
  libraries:
    - flask
    - fastapi
    - django
    - requests
    - httpx
    - starlette
    - pydantic
    - jwt
  tasks:
    - name: Create an API endpoint that validates and processes JSON data
      code_forms:
        - route decorator
        - API endpoint with documentation
        - validation function
    
    - name: Implement an authentication middleware
      code_forms:
        - middleware class
        - API endpoint with documentation
        - validation function
    
    - name: Create a caching system for frequent requests
      code_forms:
        - middleware class
        - cache manager class
        - route decorator
    
    - name: Validate request parameters with schemas
      code_forms:
        - validation function
        - API endpoint with documentation
        - middleware class
    
    - name: Manage secure user sessions
      code_forms:
        - middleware class
        - API endpoint with documentation
        - cache manager class
    
    - name: Throttle requests to API endpoints based on configurable rules
      code_forms:
        - middleware class
        - route decorator
        - cache manager class
    
    - name: Handle CORS with configurable allowed origins
      code_forms:
        - middleware class
        - API endpoint with documentation
        - route decorator
    
    - name: Create a URL shortening system with custom slug support
      code_forms:
        - API endpoint with documentation
        - route decorator
        - validation function
    
    - name: Validate form submissions with custom error messages
      code_forms:
        - validation function
        - API endpoint with documentation
        - middleware class

# === DATABASE ===
database:
  libraries:
    - sqlalchemy
    - psycopg2
    - pymongo
    - redis
    - peewee
    - alembic
    - mongodb
  tasks:
    - name: Execute a complex SQL query with joins
      code_forms:
        - query execution function
        - dynamic query generator
        - ORM model class
    
    - name: Implement an ORM model with relationships
      code_forms:
        - ORM model class
        - transaction decorator
        - pooled connection class
    
    - name: Create a schema migration function
      code_forms:
        - query execution function
        - transaction decorator
        - dynamic query generator
    
    - name: Optimize queries with indexing
      code_forms:
        - query execution function
        - ORM model class
        - dynamic query generator
    
    - name: Set up a query caching system
      code_forms:
        - pooled connection class
        - query execution function
        - transaction decorator
    
    - name: Generate database fixtures from existing data samples
      code_forms:
        - dynamic query generator
        - query execution function
        - ORM model class
    
    - name: Log and analyze query performance metrics
      code_forms:
        - transaction decorator
        - query execution function
        - pooled connection class
    
    - name: Track data changes with an audit trail mechanism
      code_forms:
        - ORM model class
        - transaction decorator
        - dynamic query generator
    
    - name: Manage database schema updates safely
      code_forms:
        - transaction decorator
        - query execution function
        - ORM model class

# === MATHEMATICS AND SCIENTIFIC COMPUTING ===
mathematics and scientific computing:
  libraries:
    - numpy
    - scipy
    - sympy
    - statsmodels
    - matplotlib
    - mpmath
    - sklearn
  tasks:
    - name: Solve a system of differential equations
      code_forms:
        - numerical solution function
        - adaptive integration class
        - approximation generator
    
    - name: Calculate descriptive statistics on a dataset
      code_forms:
        - numerical solution function
        - statistical testing class
        - vector analysis function
    
    - name: Implement a numerical optimization method
      code_forms:
        - numerical solution function
        - approximation generator
        - adaptive integration class
    
    - name: Apply matrix transformations
      code_forms:
        - vector analysis function
        - numerical solution function
        - approximation generator
    
    - name: Perform parametric and non-parametric statistical tests
      code_forms:
        - statistical testing class
        - numerical solution function
        - vector analysis function
    
    - name: Perform polynomial regression with error bounds calculation
      code_forms:
        - numerical solution function
        - approximation generator
        - statistical testing class
    
    - name: Generate random numbers with specific distribution properties
      code_forms:
        - numerical solution function
        - approximation generator
        - vector analysis function
    
    - name: Apply signal processing filters for noise reduction
      code_forms:
        - numerical solution function
        - adaptive integration class
        - vector analysis function
    
    - name: Determine statistical significance between two datasets
      code_forms:
        - statistical testing class
        - numerical solution function
        - vector analysis function

# === IMAGE PROCESSING ===
image processing:
  libraries:
    - pillow
    - opencv-python
    - scikit-image
    - imageio
    - pytesseract
    - torchvision
  tasks:
    - name: Apply filters and transformations to an image
      code_forms:
        - filtering pipeline class
        - batch processing function
        - transformation generator
    
    - name: Detect and segment objects in an image
      code_forms:
        - object recognition class
        - batch processing function
        - filtering pipeline class
    
    - name: Extract features from a series of images
      code_forms:
        - batch processing function
        - object recognition class
        - preprocessing decorator
    
    - name: Automatically correct image defects
      code_forms:
        - filtering pipeline class
        - batch processing function
        - transformation generator
    
    - name: Batch resize and crop images
      code_forms:
        - batch processing function
        - transformation generator
        - filtering pipeline class
    
    - name: Detect and extract text content from images
      code_forms:
        - object recognition class
        - batch processing function
        - preprocessing decorator
    
    - name: Hide and retrieve data within images using steganography
      code_forms:
        - transformation generator
        - filtering pipeline class
        - preprocessing decorator
    
    - name: Extract dominant color palettes from images
      code_forms:
        - batch processing function
        - object recognition class
        - filtering pipeline class
    
    - name: Generate thumbnails with intelligent cropping
      code_forms:
        - transformation generator
        - batch processing function
        - filtering pipeline class

# === CLASSIC ALGORITHMS ===
classic algorithms:
  libraries:
    - collections
    - heapq
    - bisect
    - sortedcontainers
    - networkx
    - itertools
  tasks:
    - name: Implement a custom sorting algorithm
      code_forms:
        - parameterizable algorithm class
        - recursive function
        - memoization decorator
    
    - name: Create an optimized data structure
      code_forms:
        - data structure class
        - parameterizable algorithm class
        - traversal generator
    
    - name: Solve a combinatorial optimization problem
      code_forms:
        - recursive function
        - memoization decorator
        - parameterizable algorithm class
    
    - name: Traverse and manipulate a graph
      code_forms:
        - traversal generator
        - data structure class
        - recursive function
    
    - name: Implement an advanced search algorithm
      code_forms:
        - parameterizable algorithm class
        - recursive function
        - traversal generator
    
    - name: Match strings using prefix-based indexing
      code_forms:
        - data structure class
        - recursive function
        - memoization decorator
    
    - name: Store and retrieve data in a circular buffer
      code_forms:
        - data structure class
        - parameterizable algorithm class
        - traversal generator
    
    - name: Cache data with size limitations and expiration policies
      code_forms:
        - data structure class
        - memoization decorator
        - parameterizable algorithm class
    
    - name: Solve resource allocation with constraints
      code_forms:
        - parameterizable algorithm class
        - recursive function
        - memoization decorator

# === MACHINE LEARNING ===
machine learning:
  libraries:
    - scikit-learn
    - tensorflow
    - pytorch
    - xgboost
    - lightgbm
    - keras
    - optuna
  tasks:
    - name: Preprocess and transform features for a model
      code_forms:
        - transformation pipeline
        - custom model class
        - cross-validation decorator
    
    - name: Train and evaluate a classification model
      code_forms:
        - custom model class
        - evaluation function
        - cross-validation decorator
    
    - name: Optimize a model's hyperparameters
      code_forms:
        - evaluation function
        - incremental training class
        - cross-validation decorator
    
    - name: Create a complete training pipeline
      code_forms:
        - transformation pipeline
        - custom model class
        - incremental training class
    
    - name: Interpret and visualize model results
      code_forms:
        - evaluation function
        - transformation pipeline
        - custom model class
    
    - name: Detect outliers using multiple statistical methods
      code_forms:
        - custom model class
        - evaluation function
        - transformation pipeline
    
    - name: Select features based on relevance and correlation metrics
      code_forms:
        - transformation pipeline
        - evaluation function
        - cross-validation decorator
    
    - name: Evaluate models with cross-validation techniques
      code_forms:
        - cross-validation decorator
        - evaluation function
        - custom model class
    
    - name: Balance skewed datasets for training
      code_forms:
        - transformation pipeline
        - custom model class
        - incremental training class

# === AUTOMATION AND SYSTEM ===
automation and system:
  libraries:
    - subprocess
    - pathlib
    - watchdog
    - fabric
    - psutil
    - schedule
    - asyncio
  tasks:
    - name: Monitor and manage system processes
      code_forms:
        - monitoring class
        - process management function
        - context manager
    
    - name: Automate batch file tasks
      code_forms:
        - process management function
        - event generator
        - context manager
    
    - name: Create a logging and monitoring system
      code_forms:
        - monitoring class
        - process management function
        - retry decorator
    
    - name: Implement inter-process communication
      code_forms:
        - process management function
        - monitoring class
        - event generator
    
    - name: Manage scheduled asynchronous tasks
      code_forms:
        - event generator
        - process management function
        - retry decorator
    
    - name: Respond to file system changes with custom actions
      code_forms:
        - event generator
        - monitoring class
        - context manager
    
    - name: Manage temporary files with reliable cleanup
      code_forms:
        - context manager
        - process management function
        - monitoring class
    
    - name: Schedule and prioritize background jobs
      code_forms:
        - process management function
        - event generator
        - retry decorator
    
    - name: Pool and allocate limited resources
      code_forms:
        - context manager
        - monitoring class
        - process management function

# === DEVOPS AND CI/CD ===
devops and CI/CD:
  libraries:
    - docker
    - pytest
    - ansible
    - fabric
    - prometheus-client
    - jenkins
    - kubernetes
  tasks:
    - name: Automate application deployment
      code_forms:
        - deployment class
        - CI/CD script
        - configuration function
    
    - name: Configure and validate environments
      code_forms:
        - configuration function
        - deployment class
        - test decorator
    
    - name: Create automated integration tests
      code_forms:
        - test decorator
        - CI/CD script
        - report generator
    
    - name: Manage container configurations
      code_forms:
        - deployment class
        - configuration function
        - CI/CD script
    
    - name: Monitor application metrics
      code_forms:
        - report generator
        - monitoring class
        - configuration function
    
    - name: Validate configuration consistency across environments
      code_forms:
        - configuration function
        - test decorator
        - deployment class
    
    - name: Check service health with customizable criteria
      code_forms:
        - monitoring class
        - report generator
        - test decorator
    
    - name: Analyze code dependencies and relationships
      code_forms:
        - report generator
        - test decorator
        - CI/CD script
    
    - name: Parse and extract insights from log files
      code_forms:
        - report generator
        - configuration function
        - monitoring class

# === WEB SCRAPING AND DATA COLLECTION ===
web scraping:
  libraries:
    - beautifulsoup4
    - scrapy
    - selenium
    - requests
    - playwright
    - httpx
    - aiohttp
  tasks:
    - name: Extract structured data from a web page
      code_forms:
        - scraper class
        - extraction pipeline
        - navigation function
    
    - name: Navigate and interact with a dynamic website
      code_forms:
        - navigation function
        - scraper class
        - rate limiting middleware
    
    - name: Collect data from a REST API
      code_forms:
        - scraper class
        - asynchronous spider
        - rate limiting middleware
    
    - name: Handle errors and rate limits
      code_forms:
        - rate limiting middleware
        - scraper class
        - asynchronous spider
    
    - name: Schedule periodic data collections
      code_forms:
        - asynchronous spider
        - scraper class
        - extraction pipeline
    
    - name: Extract structured data from HTML tables
      code_forms:
        - extraction pipeline
        - scraper class
        - navigation function
    
    - name: Map website structure by following links
      code_forms:
        - asynchronous spider
        - navigation function
        - scraper class
    
    - name: Compare product information across multiple sites
      code_forms:
        - extraction pipeline
        - scraper class
        - asynchronous spider
    
    - name: Manage cookies and sessions for authenticated access
      code_forms:
        - navigation function
        - scraper class
        - rate limiting middleware

# === FINANCE AND ECONOMICS ===
finance and economics:
  libraries:
    - pandas
    - numpy
    - scipy
    - statsmodels
    - pyfolio
    - quantlib-python
    - yfinance
  tasks:
    - name: Calculate financial indicators from time series
      code_forms:
        - financial analysis class
        - technical indicator function
        - backtesting pipeline
    
    - name: Simulate market scenarios with Monte Carlo
      code_forms:
        - simulation generator
        - financial analysis class
        - pricing model class
    
    - name: Optimize an investment portfolio
      code_forms:
        - financial analysis class
        - simulation generator
        - backtesting pipeline
    
    - name: Analyze and predict price trends
      code_forms:
        - technical indicator function
        - financial analysis class
        - backtesting pipeline
    
    - name: Calculate financial risk measures
      code_forms:
        - financial analysis class
        - pricing model class
        - technical indicator function
    
    - name: Calculate investment returns with various strategies
      code_forms:
        - backtesting pipeline
        - financial analysis class
        - technical indicator function
    
    - name: Compute taxes for different income categories
      code_forms:
        - financial analysis class
        - technical indicator function
        - pricing model class
    
    - name: Identify price differences across related markets
      code_forms:
        - technical indicator function
        - financial analysis class
        - simulation generator
    
    - name: Generate loan payment schedules with variables
      code_forms:
        - financial analysis class
        - pricing model class
        - simulation generator

# === GAMES AND SIMULATION ===
games and simulation:
  libraries:
    - pygame
    - numpy
    - pymunk
    - gymnasium
    - pettingzoo
    - noise
    - networkx
  tasks:
    - name: Implement a simple game engine
      code_forms:
        - game component class
        - physical simulation class
        - finite state system
    
    - name: Create an AI for a strategy game
      code_forms:
        - decision-making AI function
        - game component class
        - finite state system
    
    - name: Generate procedural content
      code_forms:
        - content generator
        - game component class
        - physical simulation class
    
    - name: Simulate a physical system
      code_forms:
        - physical simulation class
        - content generator
        - finite state system
    
    - name: Manage game states and transitions
      code_forms:
        - finite state system
        - game component class
        - decision-making AI function
    
    - name: Detect collisions between game objects
      code_forms:
        - physical simulation class
        - game component class
        - content generator
    
    - name: Generate random game environments with parameters
      code_forms:
        - content generator
        - physical simulation class
        - game component class
    
    - name: Implement a turn-based combat system
      code_forms:
        - game component class
        - decision-making AI function
        - finite state system
    
    - name: Navigate characters through environments
      code_forms:
        - decision-making AI function
        - game component class
        - content generator

# === API AND SERVICE INTEGRATION ===
api and integration:
  libraries:
    - requests
    - httpx
    - aiohttp
    - pydantic
    - tenacity
    - backoff
    - marshmallow
  tasks:
    - name: Consume a REST API with authentication
      code_forms:
        - API client class
        - authentication middleware
        - session manager
    
    - name: Create a client for asynchronous web service
      code_forms:
        - API client class
        - retry decorator
        - session manager
    
    - name: Implement an API wrapper with rate limiting
      code_forms:
        - API client class
        - retry decorator
        - authentication middleware
    
    - name: Handle errors and retries in API calls
      code_forms:
        - retry decorator
        - API client class
        - serialization function
    
    - name: Integrate multiple services in a workflow
      code_forms:
        - API client class
        - session manager
        - serialization function
    
    - name: Handle paginated API responses seamlessly
      code_forms:
        - API client class
        - serialization function
        - session manager
    
    - name: Process and validate incoming webhooks
      code_forms:
        - serialization function
        - authentication middleware
        - API client class
    
    - name: Manage API request rates and limits
      code_forms:
        - retry decorator
        - API client class
        - session manager
    
    - name: Synchronize data between disparate systems
      code_forms:
        - API client class
        - serialization function
        - session manager

# === IOT AND EMBEDDED SYSTEMS ===
iot and embedded systems:
  libraries:
    - paho-mqtt
    - pyserial
    - gpiozero
    - adafruit-io
    - influxdb
    - pika
    - bleak
  tasks:
    - name: Collect and process sensor data
      code_forms:
        - device connection class
        - signal filtering function
        - event generator
    
    - name: Communicate with devices via protocols
      code_forms:
        - device connection class
        - asynchronous event loop
        - controller class
    
    - name: Implement an automated control system
      code_forms:
        - controller class
        - asynchronous event loop
        - device connection class
    
    - name: Filter and aggregate real-time data
      code_forms:
        - signal filtering function
        - event generator
        - asynchronous event loop
    
    - name: Manage device events and alerts
      code_forms:
        - event generator
        - controller class
        - asynchronous event loop
    
    - name: Process and filter real-time sensor readings
      code_forms:
        - signal filtering function
        - device connection class
        - controller class
    
    - name: Convert between IoT communication protocols
      code_forms:
        - device connection class
        - controller class
        - signal filtering function
    
    - name: Optimize data transmission frequency
      code_forms:
        - signal filtering function
        - asynchronous event loop
        - controller class
    
    - name: Detect unusual patterns in device data
      code_forms:
        - signal filtering function
        - event generator
        - controller class

# === BIOINFORMATICS ===
bioinformatics:
  libraries:
    - biopython
    - numpy
    - pandas
    - scikit-bio
    - biotite
    - dendropy
    - pysam
    - mygene
  tasks:
    - name: Align DNA sequences using dynamic programming
      code_forms:
        - sequence analysis function
        - alignment pipeline class
        - feature extraction generator
    
    - name: Predict protein secondary structures from amino acid sequences
      code_forms:
        - prediction model class
        - sequence analysis function
        - feature extraction generator
    
    - name: Analyze gene expression data from microarrays
      code_forms:
        - feature extraction generator
        - prediction model class
        - sequence analysis function
    
    - name: Identify potential binding sites in genetic sequences
      code_forms:
        - sequence analysis function
        - feature extraction generator
        - prediction model class
    
    - name: Cluster similar proteins based on sequence similarity
      code_forms:
        - clustering algorithm function
        - sequence analysis function
        - prediction model class
    
    - name: Reconstruct phylogenetic trees from sequence data
      code_forms:
        - phylogenetic analysis pipeline
        - sequence analysis function
        - clustering algorithm function
    
    - name: Predict the impact of mutations on protein function
      code_forms:
        - prediction model class
        - sequence analysis function
        - feature extraction generator
    
    - name: Convert between different biological sequence formats
      code_forms:
        - sequence conversion utility
        - alignment pipeline class
        - annotation decorator

# === CYBERSECURITY ===
cybersecurity:
  libraries:
    - cryptography
    - scapy
    - pycryptodome
    - pyopenssl
    - owasp-zap
    - requests-security
    - bandit
    - paramiko
  tasks:
    - name: Scan files for potential security vulnerabilities
      code_forms:
        - security scanner class
        - vulnerability checker decorator
        - security monitoring service
    
    - name: Encrypt and decrypt data with key management
      code_forms:
        - encryption utility function
        - security scanner class
        - input validation class
    
    - name: Generate secure random passwords with configurable constraints
      code_forms:
        - encryption utility function
        - input validation class
        - security monitoring service
    
    - name: Detect and prevent common injection attacks
      code_forms:
        - input validation class
        - vulnerability checker decorator
        - security scanner class
    
    - name: Analyze network traffic patterns for anomalies
      code_forms:
        - packet analysis function
        - threat detection pipeline
        - security monitoring service
    
    - name: Implement challenge-response authentication mechanisms
      code_forms:
        - authentication middleware
        - encryption utility function
        - security monitoring service
    
    - name: Sanitize user inputs against XSS vulnerabilities
      code_forms:
        - input validation class
        - vulnerability checker decorator
        - security scanner class
    
    - name: Create file integrity monitoring systems
      code_forms:
        - security monitoring service
        - encryption utility function
        - threat detection pipeline

# === AUDIO PROCESSING ===
audio processing:
  libraries:
    - librosa
    - pydub
    - pyaudio
    - soundfile
    - scipy
    - pedalboard
    - aubio
    - madmom
  tasks:
    - name: Extract frequency components from audio signals
      code_forms:
        - audio transformation function
        - feature extraction generator
        - signal processing decorator
    
    - name: Filter background noise from voice recordings
      code_forms:
        - filter pipeline class
        - audio transformation function
        - signal processing decorator
    
    - name: Detect speech segments in audio files
      code_forms:
        - feature extraction generator
        - audio classification model
        - audio transformation function
    
    - name: Classify audio clips into predefined categories
      code_forms:
        - audio classification model
        - feature extraction generator
        - audio comparison function
    
    - name: Modify audio playback speed without pitch distortion
      code_forms:
        - audio transformation function
        - waveform manipulation utility
        - synthesis engine class
    
    - name: Synthesize sounds based on parameter configurations
      code_forms:
        - synthesis engine class
        - waveform manipulation utility
        - audio transformation function
    
    - name: Measure similarity between audio samples
      code_forms:
        - audio comparison function
        - feature extraction generator
        - audio classification model
    
    - name: Implement beat detection for musical analysis
      code_forms:
        - feature extraction generator
        - audio transformation function
        - audio classification model

# === GEOSPATIAL ANALYSIS ===
geospatial analysis:
  libraries:
    - geopandas
    - shapely
    - pyproj
    - folium
    - rasterio
    - cartopy
    - geopy
    - osmnx
  tasks:
    - name: Calculate distances between geographic coordinates
      code_forms:
        - coordinate transformation function
        - spatial indexing class
        - routing algorithm function
    
    - name: Cluster location data into meaningful regions
      code_forms:
        - spatial indexing class
        - region analysis class
        - geospatial data pipeline
    
    - name: Detect patterns in spatial distribution of events
      code_forms:
        - region analysis class
        - spatial visualization generator
        - geospatial data pipeline
    
    - name: Convert between different geographic coordinate systems
      code_forms:
        - coordinate transformation function
        - map projection decorator
        - geospatial data pipeline
    
    - name: Optimize routes between multiple locations
      code_forms:
        - routing algorithm function
        - spatial indexing class
        - geospatial data pipeline
    
    - name: Analyze geographic data for temporal trends
      code_forms:
        - geospatial data pipeline
        - region analysis class
        - spatial visualization generator
    
    - name: Match addresses to geographic coordinates
      code_forms:
        - geocoding utility
        - coordinate transformation function
        - geospatial data pipeline
    
    - name: Generate heatmaps from location density data
      code_forms:
        - spatial visualization generator
        - region analysis class
        - geospatial data pipeline